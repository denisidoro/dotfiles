#!/usr/bin/env bash
# vim: filetype=sh
set -euo pipefail

export DOTFILES="${DOTFILES:-$HOME/.dotfiles}"

source "${DOTFILES}/scripts/core/main.sh"
source "${DOTFILES}/scripts/environment/core.sh"

##? Updates submodules, dotfiles and attempts to do some setup
 #? 0.3.0
##?
##? Usage:
##?    dotfiles

docs::eval "$@"

DOTBOT_DIR="modules/dotbot"
DOTBOT_BIN="bin/dotbot"

function has_tag() {
  str::contains "$@"
}

function main() {
  local git_info=$(cd "$(git rev-parse --show-toplevel)" && git log -n 1 --pretty=format:'%ad - %h' --date=format:'%Y-%m-%d %Hh%M')
  log::note "Updating dotfiles\n$git_info\n"

  local tags="$(platform::tags)"
  log::warning "Current config: $tags"
  echo

  set +e

  update_dotfiles_pre;
  update_dotfiles_common;

  has_tag "$tags" "osx" && { update_dotfiles_osx; }
  has_tag "$tags" "linux" && { update_dotfiles_linux; }
  has_tag "$tags" "arm" && { update_dotfiles_arm; }
  has_tag "$tags" "x86" && { update_dotfiles_x86; }
  has_tag "$tags" "android" && { update_dotfiles_android; }

  update_dotfiles_pos;

  set -e
}

update_dotfiles_pre() {

  echo "Setting folder architecture..."
  mkdir -p "$DOTFILES/local/bin"
  pushd . > /dev/null
  cd $DOTFILES

  echo "Attempting to update submodules..."
  (cd "$DOTFILES" && git pull && git submodule init && git submodule update \
    && git submodule status && git submodule update --init --recursive "${DOTBOT_DIR}" || true) 2> /dev/null

}

update_dotfiles() {

  CONFIG="$DOTFILES/symlinks/$1"
  shift

  echo
  "${DOTFILES}/${DOTBOT_DIR}/${DOTBOT_BIN}" -d "${DOTFILES}" -c "${CONFIG}" "${@}" 
  echo

}

update_dotfiles_pos() {

  # Neovim
  echo "Installing neovim plugins..."
  nvim +silent +PlugInstall +qall > /dev/null

  # Tmux
  echo "Installing tpm plugins..."
  export TMUX_PLUGIN_MANAGER_PATH="$HOME/.tmux/plugins/"
  bash "${TMUX_PLUGIN_MANAGER_PATH}tpm/bin/install_plugins" > /dev/null
  bash "${TMUX_PLUGIN_MANAGER_PATH}tpm/bin/update_plugins" all > /dev/null

  # ZPlug
  echo "Installing ZPlug plugins..."
  zplug install 2> /dev/null
  
  # Cleanup
  popd > /dev/null

}

update_dotfiles_common() {
  update_dotfiles "conf.yaml"
}

update_dotfiles_osx() {
  echo "Configuring for OSX..."
  update_dotfiles "conf.osx.yaml"
}

update_dotfiles_linux() {
  echo "Configuring for Linux..."
  update_dotfiles "conf.linux.yaml"
}

update_dotfiles_arm() {
  echo "No custom config for ARM"
}

update_dotfiles_x86() {
  echo "No custom config for x86"
}

update_dotfiles_android() {
  echo "No custom config for Android"
}

main "$@"