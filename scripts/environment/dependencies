#!/usr/bin/env bash
# vim: filetype=sh
set -u

export DOTFILES="${DOTFILES:-$HOME/.dotfiles}"

source "${DOTFILES}/scripts/core/main.sh"
source "${DOTFILES}/scripts/environment/core.sh"

##? Installs CLI dependencies
 #? 0.3.2
##?
##? Usage:
##?    dependencies

docopts "$@"

function main() {
	is_osx && dot env install gnu; 
	setup; 
}

function setup_apt() {

  # Add commons 
  sudo apt-get install software-properties-common

  # Add third-party repositories
  for repository in $(from_dependencies "apt-repositories")
  do
    sudo add-apt-repository $repository -y
  done
  sudo apt-get update -y
  sudo apt-get upgrade -y

  # Install essential commands
  for package in $(from_dependencies "brew-apt" "apt")
  do 
    sudo apt-get install -y $package
  done

}

function setup_brew() {

  # Install brew
  if ! command_exists brew ; then
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi

  # Install essential commands
  for package in $(from_dependencies "brew-apt" "brew")
  do
    brew install $package
  done

}

function setup() {

  package_manager=$(get_package_manager)
  dependencies=$(read_dependencies)

  if [[ -z "$package_manager" ]]; then
    echo "Unable to find compatible install commands for your platform. Aborting..."
    exit 1
  else
    echo "Detected package manager: $package_manager"
  fi

  set +e

  # Invoke platform-specific setup
  case $package_manager in
    brew) setup_brew;;
    apt) setup_apt;;
  esac
  
  dot env install fzf
  dot env install spacevim
  dot env install tpm
  dot env install tmuxinator
  dot env install spacemacs

  set -e

  # Setup dotfiles
  cd $DOTFILES
  dot env dotfiles

  # Cleanup
  cd $HOME

}

main "$@"
