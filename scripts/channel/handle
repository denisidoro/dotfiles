#!/usr/bin/env bash
set -euo pipefail

source "${DOTFILES}/scripts/core/main.sh"

##? Handle a channel message
##?
##? Usage:
##?    handle <client> <type> [<data>]
##? 
##? Examples:
##?    handle phone url https://google.com

doc::maybe_help "$@"

_log() {
   local -r file="${DOTFILES}/local/channel_log.txt"
   if [ -f "$file" ]; then
      touch "$file"
   fi
   echo "$(date +"%Y-%m-%d %H:%M:%S") $*" >> "$file"
}

main() {
   _log "$@"

   local -r from="$1"
   local type="$2"
   type="${type//_/-}"
   type="${type// /-}"
   shift 2 || true

   log::info "handling message: ${from}, ${type}"

   case "$type" in
      url|uri) 
         open "$@" 
         ;;
      not|notify|notification) 
         # set -f
         # args=(${*//;/ })
         IFS=';' read -r -a args <<< "$*"
         dot channel notify "${args[@]}" 
         ;;
      clip) 
         if [ -n "$*" ]; then
            echo "$*" | dot script clip copy
         else
            local -r clip="$(dot script clip paste)"
            dot telegram message "$clip"
         fi
         ;;
      say)
         osascript -e "say \"$*\""
         ;;
      rickroll) 
         open "https://www.youtube.com/watch?v=dQw4w9WgXcQ" 
         ;;
      kill|"app-kill")
         _kill "$*"
         ;;
      app|"app-open")
         osascript -e "tell application \"$*\" to activate"
         ;;
      led) 
         dot home led "$@"
         ;;
      *) 
         die "unknown type: $type" 
         ;;
   esac
}

bluetooth_status() {
   local -r res="$(timeout 0.1 blueutil --inquiry 1 |& grep "required to be on")"
   if [ -n "$res" ]; then 
      echo false
   else 
      echo true
   fi
}

_kill() {
   set +e
   killall -KILL "$1"
   osascript -e "quit app \"$1\""
   pkill -9 "$1"
   set -e
}


main "$@" 2>&1