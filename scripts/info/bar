#!/usr/bin/env bash
# vim: filetype=sh
set -euo pipefail

##? Outputs info for Ubersicht
#?? 0.1.0
##?
##? Usage:
##?    bar all

battery() {
   pmset -g batt \
      | egrep '([0-9]+\%).*' -o --colour=auto \
      | cut -f1 -d';' \
      | sed 's/.$//'
}

cpu() {
   ps -A -o %cpu \
      | awk '{s+=$1} END {print s}' \
      | xargs -I% echo "% / 8" \
      | bc
}

memory() {
   ps -A -o %mem \
      | awk '{s+=$1} END {print s}'
}

traffic() {
   echo "$(
      netstat -w1 &
      sleep 1.5
      kill $!
   )" \
      | tail -n1 \
      | awk '{print $3 ";" $6}'
}

volume() {
   osascript -e 'get volume settings' \
      | cut -f2 -d':' \
      | cut -f1 -d','
}

drive() {
   df -h \
      | grep /dev/disk1 \
      | awk '{print $5}' \
      | sed 's/.$//'
}

wifi() {
   "/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I" \
      | awk '/ SSID/ {print substr($0, index($0, $2))}'
}

wifi_data() {
  echo ""
}

wifi2() {
   services=$(networksetup -listnetworkserviceorder | grep 'Hardware Port')

   while read line; do
       sname=$(echo $line | awk -F  "(, )|(: )|[)]" '{print $2}')
       sdev=$(echo $line | awk -F  "(, )|(: )|[)]" '{print $4}')
       if [ -n "$sdev" ]; then
           ifconfig $sdev 2>/dev/null | grep 'status: active' > /dev/null 2>&1
           rc="$?"
           if [ "$rc" -eq 0 ]; then
               currentservice="$sname"
               currentsdev="$sdev"
               break
           fi
       fi
   done <<< "$(echo "$services")"

   if [ -n "${currentservice:-}" ] ; then
          case $currentservice in
          *thern*) currentservice2="eth";;
          *Wi-Fi*) currentservice2="wifi";;
          *) currentservice2="$currentservice";;
       esac
       echo "$currentservice2;$(wifi_data)"
   else
       >&1 echo "none;none;"
       exit 1
   fi
}

clock() {
   /bin/date '+%H:%M;%d-%b'
}

_pad() {
  printf "%02.0f" "$(cat)"
}

case "${1:-}" in
   "all")
      echo "$(clock);$(battery | _pad);$(cpu | _pad);$(memory | _pad);$(volume | _pad);$(wifi2)"
      ;;
   *)
      source "${DOTFILES}/scripts/core/main.sh"
      docs::eval "$@"
      ;;
esac
