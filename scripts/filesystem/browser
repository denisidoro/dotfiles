#!/usr/bin/env bash
set -euo pipefail

source "${DOTFILES}/scripts/core/main.sh"

##? Simple file manager
##?
##? Usage:
##?    browser
##?    browser edit <line>
##?    browser view <line>
##?    browser preview <line>

docs::eval_help "$@"


# ===============
# input parsing
# ===============
edit=false
view=false
preview=false
case "${1:-}" in
   edit) edit=true; line="${2:-}" ;;
   view) view=true; line="${2:-}" ;;
   preview) preview=true; line="${2:-}" ;;
   s3://*) dot aws s3 "$@"; exit 0 ;;
esac


# ===============
# helpers
# ===============

CMD_PREFIX="FS_COMMAND/"

str::last_word() {
   rev \
      | xargs \
      | cut -d' ' -f1 \
      | rev
}


# ===============
# fs
# ===============

fs::ls() {
   if platform::command_exists colorls; then
      colorls -a1 --color=always | cut -c5- | tail -n +2
   else
      ls -a1 --color=always | tail -n +2
   fi
}

fs::open() {
   local readonly path="$1"

   if fs::is_dir "$path"; then
      cd "$path"
      action::browse
   elif fs::is_file "$path"; then
      dot os open "$path"
   fi
}


# ===============
# fzf
# ===============

fzf::bindings() {
   echo "ctrl-h:execute(echo ..)+abort"
   echo "ctrl-space:abort"
   echo "ctrl-v:execute(dot shell browser view {})"
   echo "ctrl-e:execute(dot shell browser edit {})"
   printf "ctrl-o:execute(echo ${CMD_PREFIX}vifm)+abort"
}

fzf::call() {
   fzf-tmux \
      --ansi \
      --cycle \
      --reverse \
      --inline-info \
      --header "$(pwd)" \
      --height 20 \
      --preview "dot shell browser preview {}" \
      --bind "$(fzf::bindings | tr '\n' ',')"
}


# ===============
# cmd
# ===============

cmd::vifm() {
   vifm .
   echo "$(pwd)"
   exit 0
}

cmd::unknown() {
   log::error "Unknown command"
   exit 42
}

cmd::handle() {
   local readonly name="$1"

   if echo "$name" | grep -q "$CMD_PREFIX"; then
      case "$(echo "$name" | sed "s|${CMD_PREFIX}||")" in
         vifm) cmd::vifm ;;
         *) cmd::unknown ;;
      esac
   fi
}


# ===============
# action
# ===============

action::browse() {
   local readonly selection="$(fs::ls | fzf::call)"
   local readonly name="$(echo "$selection" | str::last_word)"
   local readonly path="$(pwd)/${name}"

   cmd::handle "$name"

   if [[ -z "$name" ]]; then
      echo "$path"
      exit 0
   fi

   fs::open "$path"
}

action::edit() {
   local readonly path="$(echo "$line" | str::last_word)"
   "$EDITOR" "$path"
}

action::view() {
   local readonly path="$(echo "$line" | str::last_word)"
   if fs::is_dir "$path"; then
      ls "$path"
   elif fs::is_file "$path"; then
      dot shell less "$path"
   fi
}


# ===============
# main
# ===============

if $view; then
   action::view < /dev/tty > /dev/tty
elif $preview; then
   action::view
elif $edit; then
   action::edit < /dev/tty > /dev/tty
elif $preview; then
   action::preview
else
   action::browse
fi
