#!/usr/bin/env bash
# vim: filetype=sh
set -u

source "${DOTFILES}/scripts/core/main.sh"
source "${DOTFILES}/scripts/package/aux/add.sh"
source "${DOTFILES}/scripts/package/aux/recipes.sh"

##? Install dependencies, abstracting away package managers
##? and custom recipes
##?
##? Usage:
##?    add [options] <deps>...
##?    
##? Options:
##?    -y --yes                Skip prompt
##?    -p --package-manager    Force package-manager, skipping any custom recipe   

docs::eval_help "$@"

package_manager="$(platform::main_package_manager)"

deps_arr=()
opts_arr=()
force_package_manager=false
for arg in $@; do
   case $arg in
      -p|--package-manager) force_package_manager=true;;
      -y|--yes) [[ $package_manager != "brew" ]] && opts_arr+=("$arg");;
      *) deps_arr+=("$arg");;
   esac
done

deps="$(echo "${deps_arr[@]:-}" | str::multiline)"
recipes_as_regex="$(recipe::list | xargs | str::regex)"

mkdir -p "$TEMP_FOLDER" 2> /dev/null || true

if $force_package_manager; then
   deps_without_recipe="$(echo "$deps" | str::join)"
else 
   deps_without_recipe="$(filter::without_recipe "${deps_arr[@]:-}" "$recipes_as_regex" | str::join)"
fi

case "$package_manager" in
   apk) install_cmd="add";;
   *) install_cmd="install";;
esac

if [[ -n "$deps_without_recipe" ]]; then
   echo
   log::note "Installing ${deps_without_recipe} using ${package_manager}..."
   sudo "$package_manager" "$install_cmd" "${opts_arr[@]:-}" "${deps_without_recipe[@]:-}" ;;
fi

if ! $force_package_manager; then
   deps_with_recipe="$(filter::with_recipe "$deps" "$recipes_as_regex" | str::join)"
   for dep in $deps_with_recipe; do
      echo
      log::note "Installing ${dep} using custom recipe..."
      recipe::install "$dep"
   done
fi

rm -rf "$TEMP_FOLDER" || true