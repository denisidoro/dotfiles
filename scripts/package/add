#!/usr/bin/env bash
set -euo pipefail

source "${DOTFILES}/scripts/core/main.sh"
source "${DOTFILES}/scripts/core/dict.sh"

##? Install packages
##?
##? Usage:
##?    add [options] [<packages>...]
##?
##? Options:
##?    --prevent-recipe

docs::eval_help "$@"

if [[ "$1" == "--prevent-recipe" ]]; then
   prevent_recipe=true
   shift
else
   prevent_recipe=false
fi

if [ $# -gt 1 ]; then
   pkg_failures=0
   for package in "$@"; do
      dot pkg add "$package" || pkg_failures=$((pkg_failures+1))
   done
   exit "$pkg_failures"
fi

_is_installed() {
   log::success "${package} is already installed"
}

_installing() {
   log::warning "Attempting to install ${package}..."
}

package="$1"
platform::command_exists "$package" && _is_installed && exit 0

dashed_package="$(echo "$package" | tr ' _' '-')"
file="${DOTFILES}/scripts/package/recipes/${dashed_package}.sh"

if $prevent_recipe || ! [ -f "$file" ]; then
   _installing
   for pkg_mgr in apt apk pkg yum dnf port emerge pacman brew pnpm yarn npm pip; do
      dot pkg proxy $pkg_mgr add "$package" && exit 0 || true
   done
   exit 234
fi

source "$file"

platform::command_exists package::is_installed \
   && package::is_installed \
   && _is_installed \
   && exit 0

_installing
package::install && log::success "Finished installing ${package}!"

hash -r 2>/dev/null || true
source "${HOME}/.bashrc" 2>/dev/null || true
source "${HOME}/.zshrc" 2>/dev/null || true