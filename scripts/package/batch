#!/usr/bin/env bash
set -euo pipefail

source "${DOTFILES}/scripts/core/main.sh"
source "${DOTFILES}/scripts/core/log.sh"
source "${DOTFILES}/scripts/core/feedback.sh"

##? Install multiple dependencies
##?
##? Usage:
##?    batch list <name>
##?    batch prompt <name>
##?    batch add <name>

doc::maybe_help "$@"

# show help if no arguments
if [[ $# -lt 1 ]]; then
   "$0" --help
   exit 0
fi

DEP_LIST_FILE="${DOTFILES}/scripts/package/aux/dependencies.ini"

batch::dependencies() {
   local -r name="$1"

   for key in "$@"; do
      cat "$DEP_LIST_FILE" \
         | grep -A999 "\[${name}\].*" \
         | sed '/^ *$/q' \
         | tail -n +2
   done
}

# input parsing
list=false
prompt=false
add=false
case "${1:-}" in
   list) list=true; shift ;;
   prompt) prompt=true; shift ;;
   add) add=true; shift ;;
esac
name="$1"

_list() {
   batch::dependencies "$name" | xargs | tr ' ' '\n'
}

if $list; then
   _list
   exit 0
fi

case "$name" in
   "mini") dot pkg batch add "nano" ;;
   "dev") dot pkg batch add "mini" ;;
   "full") dot pkg batch add "dev" ;;
esac

packages=($(_list))
if dot pkg check "${packages[@]}" &> /dev/null; then
   log::note "All dependencies already installed for the batch $name"
   exit 0
fi

if $prompt; then
   log::warning "There are missing dependencies for the batch $name"
   if ! feedback::confirmation "Do you want to install it?"; then
      exit 1
   fi
fi

deps=($(batch::dependencies "$name"))
dot pkg add "${deps[@]}"
