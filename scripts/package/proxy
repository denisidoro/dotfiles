#!/usr/bin/env bash
set -euo pipefail

source "${DOTFILES}/scripts/package/aux/core.sh"

##? Install packages
##?
##? Usage:
##?    <pkg_manager> (install|add) [<packages>...]
##?    <pkg_manager> (uninstall|remove) [<packages>...]
##?    <pkg_manager> <cmd> <args>...

doc::maybe_help "$@"

aliased() {
   case "$1" in
      *npm|yarn) echo "volta" ;;
      *) echo "$1" ;;
   esac
}

sudo_dot() {
   # echoerr sudo "$@"
   sudo HOME="$HOME" ALREADY_CALLED_SELF=true "${DOTFILES}/bin/dot" "$@"
}

_valid_pkg_mgr_for_osx() {
   case "${1:-}" in
      "apt"|"apk"|"pkg"|"yum"|"dnf"|"port"|"emerge"|"pacman") return 1 ;;
   esac
   return 0
}

echoerr "args: 0: $0, 1: ${1:-}, 2: ${2:-}, 3: ${3:-}"

pkg_manager="$(aliased "$1")"

already_called_self=${ALREADY_CALLED_SELF:-false}
if $already_called_self; then
   :
else
   yaml::export
   use_sudo="$(yaml::var "pkg_sudo_${pkg_manager}" false)"
   if $use_sudo; then
      sudo_dot package proxy "$@"
      exit 0
   fi
fi

operation="$2"
shift 2

# short-circuit on OSX
platform::is_osx \
   && ! _valid_pkg_mgr_for_osx "$pkg_manager" \
   && exit 123

# unavailable package manager
has "$pkg_manager" \
   || exit 124

_actual_operation() {
   local -r operation="$1"
   case "$operation" in
      add) echo install ;;
      uninstall) echo remove ;;
      *) echo "$operation"
   esac
}

file="${DOTFILES}/scripts/package/pkg_managers/${pkg_manager}.sh"

# unsupported package manager
[ ! -f "$file" ] && exit 125

# shellcheck disable=SC1090
source "$file"

fn="${pkg_manager}::$(_actual_operation "$operation")"
debug "$fn" "$@"
