#!/usr/bin/env bash
set -euo pipefail

source "${DOTFILES}/scripts/core/main.sh"

##? Pushbullet API
#?? 0.1.0
##?
##? Usage:
##?    push list
##?    push note <device> <title> [<message>]
##?    push url <device> <uri>
##?    push url <device> <title> [<message>] <uri>
##?    push app <device> <name>
##?    push shot <device>
##?    push write <device> <text>
##?    push raw <args>...
##?
##? Examples:
##?    push list
##?    push note
##?    push url moto http://google.com
##?    push app Gmail

docs::eval "$@"

PUSHBULLET_HOME="${PUSHBULLET_HOME:-${DOTFILES}/modules/pushbullet-bash}"

best_match() {
   "$0" list \
      | fzf --filter="$*" \
      | head -n1
}

build_msg() {
   local readonly type="$1"
   local readonly txt="${2:-null}"
   echo "${type};${txt}"
}

call_api() {
   cd "$PUSHBULLET_HOME"
   bash ./pushbullet "${@:-}"
}

# call cli
if [[ ${#args[@]} > 0 ]]; then
   call_api "${args[@]:-}"
   exit 0
fi

if [ -n "${device:-}" ]; then
   device="$(best_match "$device")"
fi

if $list; then
   args=("list")
elif $url; then
   args=("push" "$device" "link")
   [ -n "${title:-}" ] && args+=("$title")
   [ -n "${message:-}" ] && args+=("$message")
   [ -n "${uri:-}" ] && args+=("$uri")
else
   args=("push" "$device" "note")
   if $note; then
      [ -n "${title:-}" ] && args+=("$title")
      [ -n "${message:-}" ] && args+=("$message")
   elif $app; then
      args+=("$(build_msg app "$name")")
   elif $shot; then
      args+=("$(build_msg shot)")
   elif $write; then
      args+=("$(build_msg write "$text")")
   elif $say; then
      args+=("$(build_msg say "$text")")
   fi
fi

# clone repository if needed
dot pkg add pushbullet-bash &> /dev/null

# call cli
if ! $list; then
   log::warning "${args[@]:-}"
fi
call_api "${args[@]:-}"
