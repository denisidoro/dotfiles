#!/usr/bin/env bash
# vim: filetype=sh

source "${DOTFILES}/scripts/core/main.sh"
source "${DOTFILES}/scripts/core/git.sh"

##? Interactive git checkout
#?? 0.1.0
##?
##? Usage:
##?    checkout prompt
##?    checkout latest

docs::eval "$@"

_tags() {
   git tag \
      | awk '{print "\x1b[31;1mtag\x1b[m\t" $1}'
}

_branches() {
   git branch --all --sort=committerdate \
      | grep -v HEAD \
      | sed "s/.* //" \
      | sed "s#remotes/[^/]*/##" \
      | awk '{print "\x1b[34;1mbranch\x1b[m\t" $1}'
}

_fzf() {
   fzf-tmux --query="${1:-}" \
      --multi \
      --select-1 \
      --exit-0 \
      --reverse \
      --height 25% \
      -- \
      --no-hscroll --ansi \
      +m -d "\t" -n 2 -1 \
      -q "$*"
}

_target() {
   local reaodnly tags="$1"
   local reaodnly branches="$2"
   shift 2

   (echo "$tags"; echo "$branches") \
      | sort -u \
      | grep . \
      | tac \
      | _fzf "$@"
}

_checkout() {
   local tags branches target
   tags=$(_tags "$@") || return
   branches=$(_branches "$@") || return
   target=$(_target "$tags" "$branches" "$@") || return
   git checkout $(echo "$target" | awk '{print $2}')
}

if $prompt; then
   _checkout "$@"
elif $latest; then
   git branch --sort=-committerdate \
      | head -n1 \
      | cut -c3-
fi
