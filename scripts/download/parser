#!/usr/bin/env bash
# vim: filetype=sh
set -euo pipefail

source "${DOTFILES}/scripts/core/main.sh"

##? Download file name parser
 #? 0.1.0
##?
##? Usage:
##?    parser video [name]

docs::eval "$@"

_remove_match() {
  local readonly match="${1:-}"
  cat | sed "s/${match}//g"
}

_apply_field_hack() {
  local readonly field="${1:-}"
  local readonly content="$(cat)"
  if [ -z "$content" ]; then
    echo "$content"
  else
    case $field in
      season) str::remove_last_char "$content";;
      episode) str::remove_last_char "$content";;
      *) echo "$content";;
    esac
  fi
}

_apply_reduced_hacks() {
  local readonly filename="${1:-}"
  echo "$filename" | sed 's/\./ /g' | xargs
}

_append() {
  echo "${1}${CYAN}${2}${NC} ${3}\n"
}

declare -A regexes
regexes=( 
  ["season"]="(s?([0-9]{1,2}))[ex]"
    ["episode"]="([ex]([0-9]{2})(?:[^0-9]|$))"
    ["year"]="([\[\(]?((?:19[0-9]|20[01])[0-9])[\]\)]?)"
    ["resolution"]="([0-9]{3,4}p)"
    ["codec"]="(xvid|[hx]\.?26[45])"
    ["group"]="(- ?([^-]+(?:-={[^-]+-?$)?))$"
    ["region"]="R[0-9]"
    ["extended"]="(EXTENDED(:?.CUT)?)"
    ["hardcoded"]="HC"
    ["proper"]="PROPER"
    ["repack"]="REPACK"
    ["container"]="(MKV|AVI|MP4)"
    ["widescreen"]="WS"
    ["website"]="^(\[ ?([^\]]+?) ?\])"
    ["language"]="(rus|eng|ita|pt-br|english|kor|spa|spanish)"
    ["sbs"]="(?:Half-)?SBS"
    ["unrated"]="UNRATED"
    ["quality"]="((?:PPV\.)?[HP]DTV|(?:HD)?CAM|B[DR]Rip|(?:HD-?)?TS|(?:PPV )?WEB-?DL(?: DVDRip)?|HDRip|DVDRip|DVDRIP|CamRip|W[EB]BRip|BluRay|DvDScr|hdtv|telesync)"
    ["sub"]="(sub)"
    ["audio"]="(MP3|DD5\.?1|Dual[\- ]Audio|LiNE|DTS|AAC[.-]LC|AAC(?:\.?2\.0)?|'AC3(?:\.5\.1)?)"
    ["size"]="(\d+(?:\.\d+)?(?:GB|MB))"
 )

filename="$(cat)"
reduced_filename="$filename"
output=""

CYAN='\033[0;36m'
NC='\033[0m'

for field in "${!regexes[@]}"; do
  match="$(echo "$filename" | grep -iPo "${regexes[$field]}" | _apply_field_hack "$field" || echo "")"
  if [ -n "$match" ]; then
    output="$(_append "$output" "$field" "$match")"
    reduced_filename=$(echo "$reduced_filename" | _remove_match "$match")
  fi
done

reduced_filename="$(_apply_reduced_hacks "$reduced_filename")"
output="$(echo "$(_append "$output" "reduced" "$reduced_filename")" | sed -E 's/\\n$//')"

if $name; then
    echo "$reduced_filename"
else 
    echo -e "$output"
fi
