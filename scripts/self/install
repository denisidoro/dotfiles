#!/usr/bin/env bash
set -euo pipefail

export DOTFILES="${DOTFILES:-$HOME/dotfiles}"
export PATH="${DOTFILES}/bin:${PATH}"
REPO="https://github.com/denisidoro/dotfiles.git"
DOT_BIN="${DOTFILES}/bin/dot"

##? Setups the environment
##?
##? Usage:
##?    install
##?
##? Env vars:
##?    DOTFILES
##?    DOT_INSTALL_SKIP_PM_UPDATE
##?    DOT_INSTALL_SKIP_CORE_DEPS
##?    DOT_INSTALL_SKIP_UPDATE
##?    DOT_COMMIT
##?    DOT_GIT_NAME
##?    DOT_GIT_EMAIL
##?    DOT_DOCOPT
##?    DOT_FRE
##?    DOT_FZF
##?    DOT_NAVI
##?    DOT_ZIM
##?    DOT_THEME
##?
##? Examples:
##?    DOTFILES="$PWD/dotfiles" DOT_INSTALL_SKIP_PM_UPDATE=true DOT_INSTALL_SKIP_CORE_DEPS=true DOT_INSTALL_SKIP_UPDATE=true DOT_COMMIT=master https://raw.githubusercontent.com/denisidoro/dotfiles/master/scripts/self/install

case "${1:-}" in
   -h|--help|--version) grep "^##?" "$0" | cut -c 5-; exit 0 ;;
esac

_dot() {
   "$DOT_BIN" "$@"
}

_has() {
   type "$1" &>/dev/null
}

_install_git() {
   sudo apt-get install git \
      || sudo yum install git \
      || brew install git \
      || sudo apk install git \
      || sudo pkg install git
}

if ! _has sudo; then
   sudo() { "$@"; }
   export -f sudo
fi

clone_repo() {
   if !has git; then
      _install_git &>/dev/null
   fi
   git clone "$REPO" "$DOTFILES" --depth 1
}

main() {
   if [ -x "$DOT_BIN" ]; then
      :
   elif [ -d "$DOTFILES" ]; then
      echo "Backing up existing dotfiles folder and cloning new dotfiles..."
      local -r old_dotfiles=$(mktemp -u -d "${DOTFILES}_XXXX")
      mv "$DOTFILES" "$old_dotfiles"
      clone_repo
   else
      echo "No dotfiles folder found. Cloning dotfiles..."
      clone_repo
   fi

   cd "$DOTFILES"

   # Use specific commit
   if [ -n "${DOT_COMMIT:-}" ]; then
      git checkout "${DOT_COMMIT}" 
      _dot self install "$@"
      exit 0
   fi

   # Make sure everything is up to date
   if ! ${DOT_INSTALL_SKIP_PM_UPDATE:-false}; then
      if _has apt-get; then
         sudo apt-get upgrade || true
         sudo apt-get update || true
      fi
      dot pkg add brew || true
      brew update || true
   fi

   if ! ${DOT_INSTALL_SKIP_CORE_DEPS:-false}; then
      # Install some key dependencies
      _dot pkg add git curl wget || true

      # Android bootstrap
      if uname -a | grep -q "ndroid"; then
         pkg install ncurses-utils || true
         _dot pkg add termux-essentials || true
      fi

      # OSX bootstrap
      if uname -s | grep -q "arwin"; then
         _dot pkg add gnu || true
      fi
   fi

   # call setup
   if ! ${DOT_INSTALL_SKIP_UPDATE:-false}; then
      _dot self update
   fi
}

main "$@"

hash -r 2>/dev/null || true
source "${HOME}/.bashrc" 2>/dev/null || true
source "${HOME}/.zshrc" 2>/dev/null || true
hash -r 2>/dev/null || true
