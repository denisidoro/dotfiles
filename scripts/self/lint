#!/usr/bin/env bash
set -euo pipefail

source "${DOTFILES}/scripts/core/main.sh"

##? Lint own files
##?
##? Usage:
##?    lint [options]
##?
##? Options:
##?    --no-rust          Skip rust lints

docs::eval_help "$@"

_all_dotfiles_files() {
   find "${DOTFILES}/scripts" -maxdepth 3 -executable -type f
   find "${DOTFILES}/" -maxdepth 4 -iname "*.sh" -type f
   find "${DOTFILES}/" -maxdepth 4 -iname "*.zsh" -type f
   find "${DOTFILES}/" -maxdepth 4 -iname "*.bash" -type f
   find "${DOTFILES}/bin" -maxdepth 2 -executable -type f
   find "${DOTFILES}/scripts/core" -maxdepth 2 -type f
   find "${DOTFILES}/shell" -maxdepth 3 -type f
   find "${DOTFILES}/tasker/sh" -maxdepth 3 -type f
   find "${DOTFILES}/tasker/js" -maxdepth 3 -type f
   find "${DOTFILES}/tests" -maxdepth 3 -type f
   find "${DOTFILES}/local" -maxdepth 3 -iname "*rc" -type f
   echo "${DOTFILES}/shell/hushlogin"
}

_dedupe() {
   sort -u
}

_filter() {
   grep -v '.py\|beautify\|docopts\|node_modules\|modules\|clojure/compile\|info/bar\|vscode\|hushlogin\|DS_S\|bin/dot'
}

_all_dotfiles_files_to_format() {
   _all_dotfiles_files \
      | _dedupe \
      | _filter
}

if [[ "$*" != *"no-rust"* ]]; then
   cd "${DOTFILES}/rust"
   dot rust fix
fi

cd "$DOTFILES"
_all_dotfiles_files_to_format \
   | sort -u \
   | xargs -I% -P8 dot code beautify "%" \
