#!/usr/bin/env bash
set -euo pipefail

source "${DOTFILES}/scripts/self/aux/test.sh"

##? Run tests
##?
##? Usage:
##?    test
##?    test suite <suite>
##?    test file <file>

docs::eval_help "$@"

_prepare_zsh() {
   if ! platform::command_exists zsh; then
      local -r bash_path="$(which bash)"
      local -r zsh_path="$(echo "$bash_path" | sed 's/bash/zsh/')"
      ln -s "$bash_path" "$zsh_path" || sudo ln -s "$bash_path" "$zsh_path"
   fi
}

_prepare_dotlink() {
   local file="${DOTFILES}/modules/dotlink/dotlink"
   if ! [[ -f "$file" ]]; then
      mkdir -p "$(dirname "$file")" || true
      local content="$(cat "$0"; echo; echo; echo "dotlink_main() { echo stub; }")"
      echo "$content" > "$file"
   fi
}

_cargo() {
   cd "${DOTFILES}/rust"
   cargo build
}

cmd="${1:-}"

file=""
suite=""
case $cmd in
   file) file="$2"; export TEST_FILTER="$2" ;;
   suite) suite="$2"; export TEST_FILTER="^${2} \-"  ;;
   *) ;;
esac

TEST_DIR="${DOTFILES}/target/test"

mkdir -p "$TEST_DIR" || true
_prepare_zsh || true
_prepare_dotlink || true

if [[ "${suite:-}" == "rust" ]]; then
   _cargo || true
fi

test::start

rm -rf "$TEST_DIR" || true