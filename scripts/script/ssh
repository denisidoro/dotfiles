#!/usr/bin/env bash
set -euo pipefail

source "${DOTFILES}/scripts/core/main.sh"
source "${DOTFILES}/scripts/core/log.sh"

##? ssh into known machines
##?
##? Usage:
##?    ssh [<query>]
##?
##? Examples:
##?    ssh
##?    ssh galaxy

doc::parse "$@"

LIST="${DOTFILES}/local/machines.json"

get_descriptions() {
   cat "$LIST" \
      | jq -r '.machines | map(.name + ", " + .dns) | .[]' \
      | column -t -s ','
}

get_name() {
   sed -E 's/(.*)\s\s*.*/\1/' \
      | xargs
}

get_config() {
   local -r name="$1"
   cat "$LIST" \
      | jq -r ".machines | .[] | select(.name==\"${name}\")"
}

eval_str() {
   local -r txt="$(cat)"
   if [[ $txt != "null" ]]; then
      eval "echo $txt"
   fi
}

field() {
   local -r config="$1"
   local -r fieldname="$2"

   echo "$config" \
      | jq -r ".${fieldname}" \
      | eval_str \
      || echo ""
}

best_match() {
   fzf --filter="$*" \
      | head -n1
}

ssh_args() {
   local -r name="$1"

   local -r config="$(get_config "$name")"
   local -r hostname="$(field "$config" hostname)"
   local -r ip="$(field "$config" ip)"
   local -r user="$(field "$config" user)"
   local -r uri="$(field "$config" uri)"
   local -r key="$(field "$config" key)"
   local -r port="$(field "$config" port)"

   if [ -n "$hostname" ]; then
      local -r id="$hostname"
   elif [ -n "$uri" ]; then
      local -r id="$uri"
   else [ -n "$ip" ];
      local -r id="$ip"
   fi

   [ -n "$key" ] && echo -n " -i $key "
   [ -n "$port" ] && echo -n " -p $port "
   [ -n "$user" ] && echo -n "${user}@"
   echo "$id"
}

if [ -n "$query" ]; then
   name="$(get_descriptions | best_match "$query" | get_name)"
else
   name="$(get_descriptions | fzf | get_name)"
fi

args=()
for arg in $(ssh_args "$name"); do
   args+=("$arg")
done

log::info "ssh'ing into $name..."
echo "ssh ${args[*]}"

ssh "${args[@]}"
