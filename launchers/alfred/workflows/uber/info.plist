<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>io.github.denisidoro.uber</string>
	<key>category</key>
	<string>Productivity</string>
	<key>connections</key>
	<dict>
		<key>50B0CD10-4D52-4898-9C05-DD3A34A829C3</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>5E93B171-92ED-4148-995B-85CE1CAE2315</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>5E93B171-92ED-4148-995B-85CE1CAE2315</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>683BF00C-63FC-4E31-8921-8B9128657D32</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>683BF00C-63FC-4E31-8921-8B9128657D32</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>5EAE1493-B0B5-43D5-AB34-9EA0F8B6BC28</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>sourceoutputuid</key>
				<string>FEF0AD58-1DE7-43BA-ADB3-D839D5B4C539</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>3A742E01-846F-4E34-BFEB-6D93EA152FA1</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Denis Isidoro</string>
	<key>description</key>
	<string>Search engine for Uber</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Uber</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>browser</key>
				<string></string>
				<key>spaces</key>
				<string></string>
				<key>url</key>
				<string></string>
				<key>utf8</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openurl</string>
			<key>uid</key>
			<string>5EAE1493-B0B5-43D5-AB34-9EA0F8B6BC28</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>1</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>127</integer>
				<key>keyword</key>
				<string>u</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>2</integer>
				<key>runningsubtext</key>
				<string></string>
				<key>script</key>
				<string>#/usr/bin/env bash
set -euo pipefail

IFS=$'\n'
fn="$HOME/dev/usearch/target/release/usearch"

trim_string() {
    : "${1#"${1%%[![:space:]]*}"}"
    : "${_%"${_##*[![:space:]]}"}"
    printf '%s\n' "$_"
}

trimmed="$(trim_string "$@")"

if [[ -z "${trimmed:-}" ]]; then
   "$fn"
   exit 0
fi

args=($(eval "for arg in $trimmed; do echo \$arg; done"))
"$fn" "${args[@]:-}"
</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string>test.sh</string>
				<key>subtext</key>
				<string>Generate results into Alfred from JSON</string>
				<key>title</key>
				<string>Script Filter JSON format</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>50B0CD10-4D52-4898-9C05-DD3A34A829C3</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>#/usr/bin/env bash
set -euo pipefail

args=($(echo "$*" | tr 'â†’' '\n'))

printf "%s" "$($HOME/dotfiles/bin/dot uber search "${args[@]:-}")"</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>5E93B171-92ED-4148-995B-85CE1CAE2315</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>conditions</key>
				<array>
					<dict>
						<key>inputstring</key>
						<string></string>
						<key>matchcasesensitive</key>
						<false/>
						<key>matchmode</key>
						<integer>4</integer>
						<key>matchstring</key>
						<string>^https?://.*</string>
						<key>outputlabel</key>
						<string>url</string>
						<key>uid</key>
						<string>FEF0AD58-1DE7-43BA-ADB3-D839D5B4C539</string>
					</dict>
				</array>
				<key>elselabel</key>
				<string>else</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.conditional</string>
			<key>uid</key>
			<string>683BF00C-63FC-4E31-8921-8B9128657D32</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<false/>
				<key>removeextension</key>
				<false/>
				<key>text</key>
				<string>No action for this type of result: {query}</string>
				<key>title</key>
				<string>Error</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>3A742E01-846F-4E34-BFEB-6D93EA152FA1</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Alfred's Script Filter object is extremely powerful, and gives you control over the results displayed in Alfred.

Alfred 3 now supports JSON, which is the recommended format. XML is also supported for legacy Alfred 2 workflows, and has been updated to include the new features.

A new option now exists for Script Filters, "Alfred filters results". This allows you to return a whole list of results, let Alfred do the subsequent filtering with extreme performance. When this option is selected, your script will be called once with no argument.</string>
	<key>uidata</key>
	<dict>
		<key>3A742E01-846F-4E34-BFEB-6D93EA152FA1</key>
		<dict>
			<key>xpos</key>
			<integer>550</integer>
			<key>ypos</key>
			<integer>205</integer>
		</dict>
		<key>50B0CD10-4D52-4898-9C05-DD3A34A829C3</key>
		<dict>
			<key>note</key>
			<string>Alfred 3 now supports JSON as the Script Filter output. This is the recommended output.</string>
			<key>xpos</key>
			<integer>85</integer>
			<key>ypos</key>
			<integer>125</integer>
		</dict>
		<key>5E93B171-92ED-4148-995B-85CE1CAE2315</key>
		<dict>
			<key>xpos</key>
			<integer>280</integer>
			<key>ypos</key>
			<integer>125</integer>
		</dict>
		<key>5EAE1493-B0B5-43D5-AB34-9EA0F8B6BC28</key>
		<dict>
			<key>xpos</key>
			<integer>550</integer>
			<key>ypos</key>
			<integer>80</integer>
		</dict>
		<key>683BF00C-63FC-4E31-8921-8B9128657D32</key>
		<dict>
			<key>xpos</key>
			<integer>450</integer>
			<key>ypos</key>
			<integer>145</integer>
		</dict>
	</dict>
	<key>version</key>
	<string>1.0</string>
	<key>webaddress</key>
	<string>https://denisidoro.github.io</string>
</dict>
</plist>
