% system, tmp

# Copy environment variable to clipboard
echo "<env_var_value>" | dot system clip copy

# List path available commands
which "<cmd>"

# Test multiple
echo <x> foo <x2> lorem <foo> <x> bar <z>

# This will pick the 3rd column and use the first line as header
docker rmi <image_id>

# Even though "false/true" is displayed, this will print "0/1"
echo <mapped>

# Checkout branch
git checkout <local_branch>

# This is my alias :: ecs
echo cool stuff

# Issue example
echo <foo>

# Preview example
cat "<with_preview>"

$ with_preview: ls --- --column 1 --preview-window 'right:50%' --preview '[ -d {} ] && ls {} || cat {}'

$ foo: echo -e 'key;description\none;1\ntwo;2\nthree;3' | column -t -s';' --- --column 1 --header-lines 1

$ image_id: docker images --- --column 3 --header-lines 1 --delimiter '\s\s+'
$ mapped: echo 'false true' | tr ' ' '\n' --- --map "[[ $0 == t* ]] && echo 1 || echo 0"

$ x: echo "1,2,3" | tr ',' '\n'
$ x2: echo "$((<x>+1)),$((<x>*<x>))" | tr ',' '\n'
$ z: echo "7,8,9" | tr ',' '\n'
$ cmd: bash -c "compgen -c"
$ env_var_value: echo -e "variable@value\n$(env)" | sed 's/=/@/' | column -t -s'@' -c2 --- --column 2 --header-lines 1
$ local_branch: git for-each-ref --sort=-committerdate refs/heads --format='%(HEAD)%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)' --color=always | cut -c 2- | column -ts'|' --- --column 1


% toplevel
@ sub1
@ sub2

# echo vars
echo <sub1_var>

# create backup
cp "<local_file>" "<local_file>.bak"

% sub1
$ sub1_var: echo "sub1_var_text + <sub2_var>"

% sub2
$ sub2_var: echo "sub2_var_text + <free_text_var>"

$ local_file: ls .

# my example
echo "<example>"

$ example: echo 'foo;bar' | tr ';' '\n'


% cal

# normal calendar
cal -B <before> -A <after>

# julian calendar
cal -j -B <before> -A <after>



% throw, expression, syntax, c#, cs, .net

# Throw expression within property
string Name \
{ \
	get name; \
	set => name = value \
	  ?? throw new ArgumentNullException(nameof(name)); \
}
