% grep

# filter lines
grep '<pattern>'

# exclude lines, remove lines
grep -v '<pattern>'


% crontab

# list
crontab -l


% awk

# last column
awk '{print $NF}'

# nth column
awk '{print $<n>}'

# with prefix
sed -e 's/^/<prefix>/'


% network

# private ip
ifconfig | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p'


# mv issue
echo mv <basis> <variant>

$ basis: echo -e "v100.master\nv100.staging\nv100.prod"
$ variant: echo -e "${basis}\nfoo" --- --overrides '--bind=ctrl-u:replace-query'

% text 

# remove first line
tail -n +2

# demo
echo "$(dot terminal ansi --magenta foo) $(dot terminal ansi --cyan bar)" | pv -qL 22


% brew, cask

# remove brew package
brew remove <installed>

$ package: brew search
$ casks: brew search --casks
$ installed: brew list
$ caskinstalled: brew cask list
$ brewservice: brew services list | awk '{if (NR>1){printf "%s\n", $1}}'


% filesystem

# Delete all broken symlinks in the current directory
find -L . -name . -o -type d -prune -o -type l -exec rm {} +





% httpie, http

# send an http request
http <method> <url>

# send an http request with a custom header
http <method> <url> <headername>:<headervalue>

$ file: ls
$ method: echo -e 'GET\nPOST\nPUT\nDELETE\nPATCH'






% docker

# print logs
docker logs --follow <container_id>

# shell into container
docker exec -i -t <container_id> /bin/sh

$ image_id: docker images --- --headers 1 --column 3 --delimiter '\s\s+'
$ container_id: docker ps --- --headers 1 --column 1 --delimiter '\s\s+'


% git common

$ local_branch: dot git ls local_branch --- --column 1
$ config: dot git ls config --- --column 1
$ stash: dot git ls stash --- --column 1
$ commit: dot git ls commit --- --column 1
$ toplevel_dir: dot git ls toplevel_dir
$ file: dot git ls file --- --column 1 --preview-window 'right:50%' --preview 'bat -p --color=always {}'
$ files: dot git ls file --- --multi --column 1 --preview-window 'right:50%' --preview 'bat -p --color=always {}' --map "sed -e 's/^.*$/\"&\"/' | tr '\n' ' '"
$ modified_file: dot git ls file -m --- --column 1 --preview-window 'right:50%' --preview 'bat -p --color=always {}'
$ modified_files: dot git ls file -m --- --multi --column 1 --preview-window 'right:50%' --preview 'bat -p --color=always {}' --map "sed -e 's/^.*$/\"&\"/' | tr '\n' ' '"
$ tag: dot git ls tag --- --column 1
$ upstream_branch: dot git branch upstream || echo master
$ modified_files_upstream: git diff --name-only "<upstream_branch>" --- --multi --preview 'bat -p --color=always {}' --map "sed -e 's/^.*$/\"&\"/' | tr '\n' ' '"

% git branch
@ git common

# checkout branch :: gb
git checkout "<local_branch>"

% git config
@ git common

# print config value
git config "<config>"

% git view
@ git common

# view
bat --color=always "<file>"

% git add
@ git common

# add files
git add <files> 